// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication2.Models;

namespace WebApplication2.Migrations
{
    [DbContext(typeof(VacationContext))]
    [Migration("20220413202111_migrationVacation")]
    partial class migrationVacation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("vacation")
                .HasAnnotation("Relational:Collation", "Polish_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApplication1.Models.City", b =>
                {
                    b.Property<int>("IdCity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdCountry")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("IdCity")
                        .HasName("CityId_pk");

                    b.HasIndex("IdCountry");

                    b.ToTable("City");
                });

            modelBuilder.Entity("WebApplication1.Models.Country", b =>
                {
                    b.Property<int>("IdCountry")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("IdCountry")
                        .HasName("Country_pk");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("WebApplication1.Models.Item", b =>
                {
                    b.Property<int>("IdItem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("IsPacked")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("IdItem")
                        .HasName("Item_pk");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("WebApplication1.Models.Suitcase", b =>
                {
                    b.Property<int>("IdSuitcase")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdCity")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("IdSuitcase")
                        .HasName("Suitcase_pk");

                    b.HasIndex("IdCity");

                    b.HasIndex("IdUser");

                    b.ToTable("Suitcase");
                });

            modelBuilder.Entity("WebApplication1.Models.SuitcaseItem", b =>
                {
                    b.Property<int>("IdItem")
                        .HasColumnType("int");

                    b.Property<int>("IdSuitcase")
                        .HasColumnType("int");

                    b.HasKey("IdItem", "IdSuitcase")
                        .HasName("SuitcaseItem_pk");

                    b.HasIndex("IdSuitcase");

                    b.ToTable("SuitcaseItem");
                });

            modelBuilder.Entity("WebApplication1.Models.UserVacation", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.HasKey("IdUser")
                        .HasName("User_pk");

                    b.ToTable("UserVacation");
                });

            modelBuilder.Entity("WebApplication1.Models.City", b =>
                {
                    b.HasOne("WebApplication1.Models.Country", "IdCountryNavigation")
                        .WithMany("Cities")
                        .HasForeignKey("IdCountry")
                        .HasConstraintName("City_Country_pk")
                        .IsRequired();

                    b.Navigation("IdCountryNavigation");
                });

            modelBuilder.Entity("WebApplication1.Models.Suitcase", b =>
                {
                    b.HasOne("WebApplication1.Models.City", "IdCityNavigation")
                        .WithMany("Suitcases")
                        .HasForeignKey("IdCity")
                        .HasConstraintName("Cities")
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.UserVacation", "IdUserNavigation")
                        .WithMany("Suitcases")
                        .HasForeignKey("IdUser")
                        .HasConstraintName("Users")
                        .IsRequired();

                    b.Navigation("IdCityNavigation");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("WebApplication1.Models.SuitcaseItem", b =>
                {
                    b.HasOne("WebApplication1.Models.Item", "IdItemNavigation")
                        .WithMany("SuitcaseItems")
                        .HasForeignKey("IdItem")
                        .HasConstraintName("SuitcaseItem_Item")
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Suitcase", "IdSuitcaseNavigation")
                        .WithMany("SuitcaseItems")
                        .HasForeignKey("IdSuitcase")
                        .HasConstraintName("SuitcaseItem_suitcase")
                        .IsRequired();

                    b.Navigation("IdItemNavigation");

                    b.Navigation("IdSuitcaseNavigation");
                });

            modelBuilder.Entity("WebApplication1.Models.City", b =>
                {
                    b.Navigation("Suitcases");
                });

            modelBuilder.Entity("WebApplication1.Models.Country", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("WebApplication1.Models.Item", b =>
                {
                    b.Navigation("SuitcaseItems");
                });

            modelBuilder.Entity("WebApplication1.Models.Suitcase", b =>
                {
                    b.Navigation("SuitcaseItems");
                });

            modelBuilder.Entity("WebApplication1.Models.UserVacation", b =>
                {
                    b.Navigation("Suitcases");
                });
#pragma warning restore 612, 618
        }
    }
}
